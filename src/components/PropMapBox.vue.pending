<template>
    <MglMap
        container="map-test"
        :accessToken="accessToken"
        :mapStyle="mapStyle"
    >
        <MglMarker
                :coordinates.sync="markerCoordinates"
                color='green'
        />
        <MglGeojsonLayer
                type="fill"
                :source="geoJsonSource"
                :sourceId="geoJsonSource.id"
                layerId="geojsonlayer.id"
                :layer="geojsonlayer"
                @click="handleClick"
        />
    </MglMap>
</template>

<script>

    import Mapbox from "mapbox-gl";
    import {
        MglMap,
        MglMarker,
        MglGeojsonLayer
    } from 'vue-mapbox'

    export default {
        name: 'App',
        components: {
            MglMap,
            MglMarker,
            MglGeojsonLayer
        },
        /*data() {
            return {
                accessToken: 'some_token',
                mapStyle: 'mapbox://map_style',
                geojson: { },
                layerId: 'firstLayer',
                sourceId: 'firstSource',
                markerCoordinates: '[50, 50]'
            }
        }*/
        data() {
            return {
                header: {},
                accessToken: 'pk.eyJ1IjoibWFuYXZhIiwiYSI6ImNrYmQ3cXA0ZzA5Mmgycm9qcjVmYXVtYTEifQ.V6wLbwnmOWz2JyuhCWlTlQ',
                mapStyle: 'mapbox://styles/manava/ckbe6dzq91mi41inrsayqmg3h',
                //mapbox://styles/mapbox/basic-v10
                geoJsonSource: {'id':'xxx', 'type': 'geojson', 'data': { 'id': 'test', 'type': 'Feature', 'properties': {}, 'geometry': { 'type': 'LineString', 'coordinates': [ [-122.48369693756104, 37.83381888486939]]}}},
                geoJsonSource2: {
                    type: "Feature",
                        geometry: {
                        type: "Point",
                            coordinates: [125.6, 10.1]
                    },
                    properties: {
                        name: "Dinagat Islands"
                    }
                },
                geojson: {
                    'id': 'nationalpark',
                    'type': 'geojson',
                    'data': {
                        'type': 'FeatureCollection',
                        'features': [
                            {
// feature for Mapbox DC
                                'type': 'Feature',
                                'geometry': {
                                    'type': 'Point',
                                    'coordinates': [
                                        -77.03238901390978,
                                        38.913188059745586
                                    ]
                                },
                                'properties': {
                                    'title': 'Mapbox DC',
                                    'icon': 'monument'
                                }
                            },
                            {
// feature for Mapbox SF
                                'type': 'Feature',
                                'geometry': {
                                    'type': 'Point',
                                    'coordinates': [-122.414, 37.776]
                                },
                                'properties': {
                                    'title': 'Mapbox SF',
                                    'icon': 'harbor'
                                }
                            }
                        ]
                    }
                },
                layerId: 'firstLayer',
                markerCoordinates: [50, 50],
                geojsonlayer: {
                    'id': 'firstLayer',
                    'source':this.geojson,
                    'type': 'circle',
                    'paint': {
                        'circle-radius': 6,
                        'circle-color': '#B42222'
                    },
                    'filter': ['==', '$type', 'Point']
                }
            }
        },
        created() {

            /*
            let headerUrl = 'http://localhost/api/v1/get-header&XDEBUG_SESSION_START=PHPSTORM';
            this.axios.get(headerUrl).then(response => {
                this.header = response.data;
            });
            */
            // We need to set mapbox-gl library here in order to use it in template
            this.mapboxgl = Mapbox;//this.$mapboxgl;
        },
        mounted() {
            console.log('Component example mounted.')

        },
        methods: {
            test (event) {
                console.log(event);
            },
            handleClick(event){
                console.log(event);
            }
        }


    }
</script>
